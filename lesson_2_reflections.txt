What happens when you initialize a repository? Why do you need to do it?

	When I initialize a repository a hidden directory is created, in which git saves the data for the tracking of the commits. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
	
	In the repository git keeps track of the changes, that are made. In the working directory there are the files, that are not necessarily tracked. The value of the staging area is that of a try and error space.

How can you use the staging area to make sure you have one commit per logical change?

	Before commiting a change check the diff between the working area and the staging area. Make sure, only the changes, you want to commit are in the staging area and then commit the change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Branches are helpful, when I want to experiment with a programm and do not securly consider the change as a new feature for the system. Also for different versions to test different changes branches are helpful.

How do the diagrams help you visualize the branch structure?

	Diagrams help visualize the different branches of a project and help to keep track of the reachable commits from every branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The result is, that the changes made on two branches are merged in one branch. The commits before the merger are accessible by the new merged branch as parents.

